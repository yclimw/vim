snippet poba.grd "grd subtable values" !b
var rs = "grd${1:subtablename}.addRow(rowNum," + "'" + 
		${2:param}+ "," + 
		${3:param}+ "," + 
		${4:param}+ "," + 
		${5:param}+ "," + 
		${6:param}+ "," + 
		${7:param}+ "," + 
		"',rowNum);\r\n";
endsnippet

snippet poba.out "out put system log" !b
out.println("${1:info}");
endsnippet

snippet poba.系统邮件签名 "get System Admin Email Sign"
/**
 * 系统邮件签名信息
 * date: `!v strftime("%Y-%m-%d %H:%M:%S")`
 * @author yclimw
 */
function getAdminMailSign() {
	var sign = "<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;此邮件为业务架构平台系统自动发送，请勿回复。<br />-----------------------------------<br />福建新大陆支付技术有限公司 供应商协同平台";
	return sign;
}
endsnippet

snippet poba.getMailReceiversByRole "通过OA系统中的角色编号获取该角色下所有用户的邮件地址"
/**
 * 通过角色号获取该角色下所有用户的邮件地址
 * date: `!v strftime("%Y-%m-%d %H:%M:%S")`
 * @author yclimw
 * @param 角色编号
 * @return String 收件人邮件列表，数据格式：邮件1,邮件2,……
 */
function getMailReceiversByRole(roleCode) {
	var login = new Login();
	var mailReceivers = "";
	var users = OuClient.getUsersByRole("root", roleCode); //根据角色号获取角色下所有人员信息
	if (users != null && users.length > 0) {
		for (var i = 0; i < users.length; i++) {
			var usercode = users[i].getCode();
			var list = appBo.query("SELECT EMAIL FROM OU_USER WHERE CODE='" + usercode + "'");
			if (list != null && list.size() > 0) {
				var email = list.get(0).get("EMAIL");
				if (email != null && email != "") {
					mailReceivers = mailReceivers + email + ",";
				}
			}
		}
	}
	return mailReceivers;
}
endsnippet

snippet poba.getReceiverEmails "get Mail Receivers Address By TaskId"
/*
 * 通过任务编号获取收件人列表
 * date: `!v strftime("%Y-%m-%d %H:%M:%S")`
 * @author yclimw
 * @param taskid OA配置表里面配置的任务编号
 * @return String 收件人邮件列表，数据格式：邮件1,邮件2,邮件3，……
 */
function getReceiverEmails(taskid) {
	var sql = "SELECT DISTINCT RECEIVEREMAIL FROM IM_EMAILRECEIVERDETAILS b JOIN IM_EMAILRECEIVER a ON a.ID=b.MID WHERE TASKID='" + taskid + "'";
	var list2 = appBo.query(sql);
	var toEmail = "";
	if (list2 != null && list2.size() > 0) {
		for (var maillist = 0; maillist < list2.size(); maillist++) {
			var toEmailsub = list2.get(maillist).get("RECEIVEREMAIL");
			if (toEmailsub != null && toEmailsub != "") {
				toEmail = toEmail + toEmailsub + ",";
			}
		}
	}
	return toEmail;
}
endsnippet

snippet poba.域动态定制 "模块域动态定制脚本样例"
/**
 * 模块域动态定制脚本样例
 * @author yclimw
 * date: `!v strftime("%Y-%m-%d %H:%M:%S")`
*/ 
importClass(Packages.cn.com.chx.bo.AppBo);
var appBo = new AppBo();

var myDate = new Date();
var ls = appBo.query("SELECT XQYF from VW_PO_PMC_CG");
var xqyf;
if (ls != null && ls.size() > 0) {
	xqyf = Number(ls.get(0).get("XQYF"));
}
var fy = (xqyf - 1) % 12 + 1;
var ly = xqyf % 12 + 1;
var qy = (xqyf + 1) % 12 + 1;

var tObj = util.getField("fy");
tObj.setName(fy + "月");
var tObj = util.getField("fyhf");
tObj.setName(fy + "月回复");
tObj = util.getField("ly");
tObj.setName(ly + "月");
tObj = util.getField("lyhf");
tObj.setName(ly + "月回复");
tObj = util.getField("qy");
tObj.setName(qy + "月");
tObj = util.getField("qyhf");
tObj.setName(qy + "月回复");
endsnippet

snippet poba.发送邮件 "发送电子邮件"
importClass(Packages.cn.com.chx.oa.plugs.mail.SendMailUtil); //邮件地址解析类
importClass(Packages.cn.com.chx.oa.plugs.mail.SendMail);

/**
 * 以系统管理员的身份发送邮件
 * @author yclimw
 * date: `!v strftime("%Y-%m-%d %H:%M:%S")`
*/ 
function sendMail(){
	//邮箱IP
	var emailserverip = FrameData.getInstance().getConfigItem("im-dictionary", "emailconfig", "emailserverip");
	//邮箱地址
	var emailaddress = FrameData.getInstance().getConfigItem("im-dictionary", "emailconfig", "emailaddress");
	//邮箱密码
	var postmasterpwd = FrameData.getInstance().getConfigItem("im-dictionary", "emailconfig", "emailpwd");
	var emailcode = emailaddress.substring(0, emailaddress.indexOf("@"));
	//邮件处理类
	var mail = new SendMail(emailserverip);
	var toEmail = getReceiverEmails("onlineorderinfo"); //正式使用
	// var toEmail = getReceiverEmails("dssjywtzd"); //测试使用
	var mailsubject = "抓取电商数据-自动生成业务通知单-" + Pub.GetToday();
	var mailcontent = "抓取电商数据-自动生成业务通知单,抓取数据：" + total + "条，其中成功启动业务通知单流程：" + success + "条，启动异常：" + failure + "条。";
	mail.setMail(emailserverip, mailsubject, mailcontent, toEmail, "", emailaddress, "", emailcode, postmasterpwd);
}
endsnippet

snippet poba.附件位置 "获取OA系统配置的附件路径"
importClass(Packages.cn.com.chx.eform.util.appUtil);
var ${1:attachPath} = appUtil.getAttatchPath()
endsnippet

snippet poba.数据表单删除 "带子表的数据表单删除代码"
/**
 * 自定义带子表的数据表单删除功能（OA系统自带的删除功能只能删除主表的记录，子表的记录无法删除）
 * @author yclimw
 * @param id 主表 ID
 * date: `!v strftime("%Y-%m-%d %H:%M:%S")`
*/
//删除ID对应的主表
//遍历对应所有的子表，删除MID=ID的所有子表记录
importClass(Packages.cn.com.chx.util.Pub);
importClass(Packages.cn.com.chx.bo.AppBo);
importClass(java.util.HashMap);
importClass(Packages.cn.com.chx.util.DateTimeUtil); //获取时间格式，精确到毫秒：20140928113424030
importClass(java.util.ArrayList);
function delete(id){
	var appBo = new AppBo();
	var ret = request.getParameter("retvalue");
	var errlists = "";
	var falsenum = 0;
	var successnum = 0;
	var outtag="【表单】PO-送货单-删除：";
	out.println(outtag+ret);
	if (ret == null || ret.length == 0) {
		runtime.setMessage("alert('请先选择送货单');\r\n");
	} else {
		var id = ret.split(";");
		if (id.length > 0) {
			for (var i = 0; i < id.length; i++) {
				var billID = id[i]; //送货单主表ID
				if (billID != null) {
					var list = appBo.query("SELECT FLAG,ORDERNUM FROM PO_DM_DELIVERYORDER WHERE ID=" + billID);
					if (list != null && list.size() > 0) {
						var flag = list.get(0).get("FLAG");
						var ordernum = list.get(0).get("ORDERNUM");
						out.println(outtag+ordernum);
						if (flag == "0" && isNotExistPublishedGoodsReceipt(ordernum)) { //送货单未发布且下游不存在已经发布的收货单
							var sql = "DELETE FROM PO_DM_DELIVERYORDER WHERE ID=" + billID; //删除单据
							out.println(outtag+":"+login.id+":"+ordernum+":"+sql);
							appBo.runSQL(sql);
							sql = "DELETE FROM PO_DM_DELIVERYORDER_SUB WHERE MID=" + billID;
							out.println(outtag+":"+login.id+":"+ordernum+":"+sql);
							appBo.runSQL(sql);
							deleteGoodsReceipt(ordernum); //删除对应的收货单（如果有的话）
							successnum++;
						} else {
							errlists = errlists + ordernum + " ";
							falsenum++;
						}
					}
				}
			}
		}
		if (falsenum == 0) {
			runtime.setMessage("alert('操作完成。成功" + successnum + "条；失败" + falsenum + "条');\r\n");
		} else {
			runtime.setMessage("alert('操作完成。成功" + successnum + "条；失败" + falsenum + "条\\n其中送货单：" + errlists + "为已发布状态，需要先回退再删除');\r\n");
		}
		runtime.setMessage("submitQuery('query');\r\n");
	}
	
}

endsnippet
